name: CI/CD workflow

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY_HOST }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.CONTAINER_REGISTRY_HOST }}${{ secrets.IMAGE_TAG }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo ${{ secrets.PRODUCTION_PASSWORD }} | sudo -S -k docker ps -q --filter ancestor="${{ secrets.CONTAINER_REGISTRY_HOST }}${{ secrets.IMAGE_TAG }}" | xargs -r sudo docker stop
            echo ${{ secrets.PRODUCTION_PASSWORD }} | sudo -S -k docker run -d -v ${{ secrets.PATH_TO_ENV }}:$CONTAINER_ENV_PATH --network postgres_default --restart=always --name aurora-telegram-bot ${{ secrets.CONTAINER_REGISTRY_HOST }}${{ secrets.IMAGE_TAG }}

